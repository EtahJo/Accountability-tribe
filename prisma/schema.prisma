// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // previewFeatures = ["mongodb"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}
enum UserRole{
ADMIN
USER
}


model User {
  id            String          @id @default(auto()) @map("_id") @db.ObjectId
  username      String?         @unique
  email         String?         @unique
  password      String?
  emailVerified DateTime?
  remember      Boolean?
  number       String?
  linkedIn     String?
  X            String?
  facebook     String?
  country      String?
 tribes         TribeUser[]  
sessions      Session[]
timezone      String?

  image         String?
 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}



model Tribe{
  id           String      @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  description  String?
  profileImage   String?
  users        TribeUser[]
  // members     Member[] 



}
model TribeUser{
    id           String      @id @default(auto()) @map("_id") @db.ObjectId
    userId      String @db.ObjectId
    tribeId     String @db.ObjectId
    userRole   UserRole
    tribe    Tribe @relation(fields: [tribeId],references: [id])
    user     User @relation(fields: [userId],references: [id])
     @@unique([userId, tribeId])
}
model Member {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  name   String
  email  String 
  tribeId String @db.ObjectId
  // tribe  Tribe @relation(fields: [tribeId],references: [id])
}
model SessionParticipant{
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  name   String
  goal   String?
  country String?
  email String 
  sessionId String @db.ObjectId
  session Session @relation(fields: [sessionId],references: [id])
}

model Session{
   id     String @id @default(auto()) @map("_id") @db.ObjectId
   goal   String
    creatorId     String @db.ObjectId
   startDateTime DateTime
   endDateTime   DateTime?
   meetingLink   String
   duration    String?
   admin    User@relation(fields: [creatorId],references: [id])
   participants SessionParticipant[]
}